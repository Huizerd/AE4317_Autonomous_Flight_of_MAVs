/* This file has been generated by gen_flight_plan from /home/michiel/paparazzi/conf/flight_plans/tudelft/CR7/CR7_FP.xml */
/* Version v5.13_devel-166-gae18987-dirty */
/* Please DO NOT EDIT */

#ifndef FLIGHT_PLAN_H
#define FLIGHT_PLAN_H

#include "std.h"
#include "generated/modules.h"
#include "subsystems/abi.h"
#include "autopilot.h"

    #include "subsystems/datalink/datalink.h"
    #include "subsystems/electrical.h"
    #include "subsystems/radio_control.h"
    #include "subsystems/ahrs.h"
    #define NPS_GAZEBO_WORLD "cyberzoo_orange_poles.world"

#define FLIGHT_PLAN_NAME "Bebop avoid orange TU Delft Cyberzoo"
#define NAV_DEFAULT_ALT 1 /* nominal altitude of the flight plan */
#define NAV_UTM_EAST0 594535
#define NAV_UTM_NORTH0 5760892
#define NAV_UTM_ZONE0 31
#define NAV_LAT0 519906361 /* 1e7deg */
#define NAV_LON0 43767873 /* 1e7deg */
#define NAV_ALT0 0 /* mm above msl */
#define NAV_MSL0 45110 /* mm, EGM96 geoid-height (msl) over ellipsoid */
#define QFU 0.0
#define WP_dummy 0
#define WP_HOME 1
#define WP_CLIMB 2
#define WP_STDBY 3
#define WP_TD 4
#define WP_GOAL 5
#define WP_TRAJECTORY 6
#define WP__CZ1 7
#define WP__CZ2 8
#define WP__CZ3 9
#define WP__CZ4 10
#define WP__OZ1 11
#define WP__OZ2 12
#define WP__OZ3 13
#define WP__OZ4 14
#define WAYPOINTS_UTM { \
 {0.0, 0.0, 1.0},\
 {0.6, -0.6, 1.0},\
 {1.9, 1.0, 1.0},\
 {1.9, 1.0, 1.0},\
 {0.8, -1.7, 1.0},\
 {1.9, 1.0, 1.0},\
 {1.9, 1.0, 1.0},\
 {-0.9, -5.9, 1.0},\
 {-5.0, -0.1, 1.0},\
 {1.1, 4.9, 1.0},\
 {5.7, -1.4, 1.0},\
 {-0.7, -4.7, 1.0},\
 {-3.7, -0.1, 1.0},\
 {1.2, 3.9, 1.0},\
 {4.5, -1.3, 1.0},\
};
#define WAYPOINTS_ENU { \
 {0.00, -0.00, 1.00}, /* ENU in meters  */ \
 {0.59, -0.57, 1.00}, /* ENU in meters  */ \
 {1.92, 0.96, 1.00}, /* ENU in meters  */ \
 {1.92, 0.96, 1.00}, /* ENU in meters  */ \
 {0.77, -1.72, 1.00}, /* ENU in meters  */ \
 {1.92, 0.96, 1.00}, /* ENU in meters  */ \
 {1.92, 0.96, 1.00}, /* ENU in meters  */ \
 {-1.00, -5.84, 1.00}, /* ENU in meters  */ \
 {-5.05, 0.05, 1.00}, /* ENU in meters  */ \
 {1.21, 4.89, 1.00}, /* ENU in meters  */ \
 {5.66, -1.50, 1.00}, /* ENU in meters  */ \
 {-0.78, -4.69, 1.00}, /* ENU in meters  */ \
 {-3.73, -0.01, 1.00}, /* ENU in meters  */ \
 {1.27, 3.89, 1.00}, /* ENU in meters  */ \
 {4.44, -1.34, 1.00}, /* ENU in meters  */ \
};
#define WAYPOINTS_LLA { \
 {.lat=519906360, .lon=43767873, .alt=1000}, /* 1e7deg, 1e7deg, mm (above NAV_MSL0, local msl=45.11m) */ \
 {.lat=519906309, .lon=43767959, .alt=1000}, /* 1e7deg, 1e7deg, mm (above NAV_MSL0, local msl=45.11m) */ \
 {.lat=519906447, .lon=43768153, .alt=1000}, /* 1e7deg, 1e7deg, mm (above NAV_MSL0, local msl=45.11m) */ \
 {.lat=519906447, .lon=43768153, .alt=1000}, /* 1e7deg, 1e7deg, mm (above NAV_MSL0, local msl=45.11m) */ \
 {.lat=519906206, .lon=43767985, .alt=1000}, /* 1e7deg, 1e7deg, mm (above NAV_MSL0, local msl=45.11m) */ \
 {.lat=519906447, .lon=43768153, .alt=1000}, /* 1e7deg, 1e7deg, mm (above NAV_MSL0, local msl=45.11m) */ \
 {.lat=519906447, .lon=43768153, .alt=1000}, /* 1e7deg, 1e7deg, mm (above NAV_MSL0, local msl=45.11m) */ \
 {.lat=519905835, .lon=43767728, .alt=1000}, /* 1e7deg, 1e7deg, mm (above NAV_MSL0, local msl=45.11m) */ \
 {.lat=519906365, .lon=43767138, .alt=1000}, /* 1e7deg, 1e7deg, mm (above NAV_MSL0, local msl=45.11m) */ \
 {.lat=519906800, .lon=43768050, .alt=1000}, /* 1e7deg, 1e7deg, mm (above NAV_MSL0, local msl=45.11m) */ \
 {.lat=519906226, .lon=43768698, .alt=1000}, /* 1e7deg, 1e7deg, mm (above NAV_MSL0, local msl=45.11m) */ \
 {.lat=519905939, .lon=43767760, .alt=1000}, /* 1e7deg, 1e7deg, mm (above NAV_MSL0, local msl=45.11m) */ \
 {.lat=519906360, .lon=43767330, .alt=1000}, /* 1e7deg, 1e7deg, mm (above NAV_MSL0, local msl=45.11m) */ \
 {.lat=519906710, .lon=43768059, .alt=1000}, /* 1e7deg, 1e7deg, mm (above NAV_MSL0, local msl=45.11m) */ \
 {.lat=519906240, .lon=43768519, .alt=1000}, /* 1e7deg, 1e7deg, mm (above NAV_MSL0, local msl=45.11m) */ \
};
#define WAYPOINTS_LLA_WGS84 { \
 {.lat=519906360, .lon=43767873, .alt=46110}, /* 1e7deg, 1e7deg, mm (above WGS84 ref ellipsoid) */ \
 {.lat=519906309, .lon=43767959, .alt=46110}, /* 1e7deg, 1e7deg, mm (above WGS84 ref ellipsoid) */ \
 {.lat=519906447, .lon=43768153, .alt=46110}, /* 1e7deg, 1e7deg, mm (above WGS84 ref ellipsoid) */ \
 {.lat=519906447, .lon=43768153, .alt=46110}, /* 1e7deg, 1e7deg, mm (above WGS84 ref ellipsoid) */ \
 {.lat=519906206, .lon=43767985, .alt=46110}, /* 1e7deg, 1e7deg, mm (above WGS84 ref ellipsoid) */ \
 {.lat=519906447, .lon=43768153, .alt=46110}, /* 1e7deg, 1e7deg, mm (above WGS84 ref ellipsoid) */ \
 {.lat=519906447, .lon=43768153, .alt=46110}, /* 1e7deg, 1e7deg, mm (above WGS84 ref ellipsoid) */ \
 {.lat=519905835, .lon=43767728, .alt=46110}, /* 1e7deg, 1e7deg, mm (above WGS84 ref ellipsoid) */ \
 {.lat=519906365, .lon=43767138, .alt=46110}, /* 1e7deg, 1e7deg, mm (above WGS84 ref ellipsoid) */ \
 {.lat=519906800, .lon=43768050, .alt=46110}, /* 1e7deg, 1e7deg, mm (above WGS84 ref ellipsoid) */ \
 {.lat=519906226, .lon=43768698, .alt=46110}, /* 1e7deg, 1e7deg, mm (above WGS84 ref ellipsoid) */ \
 {.lat=519905939, .lon=43767760, .alt=46110}, /* 1e7deg, 1e7deg, mm (above WGS84 ref ellipsoid) */ \
 {.lat=519906360, .lon=43767330, .alt=46110}, /* 1e7deg, 1e7deg, mm (above WGS84 ref ellipsoid) */ \
 {.lat=519906710, .lon=43768059, .alt=46110}, /* 1e7deg, 1e7deg, mm (above WGS84 ref ellipsoid) */ \
 {.lat=519906240, .lon=43768519, .alt=46110}, /* 1e7deg, 1e7deg, mm (above WGS84 ref ellipsoid) */ \
};
#define WAYPOINTS_GLOBAL { \
 FALSE, \
 TRUE, \
 FALSE, \
 FALSE, \
 FALSE, \
 FALSE, \
 FALSE, \
 TRUE, \
 TRUE, \
 TRUE, \
 TRUE, \
 TRUE, \
 TRUE, \
 TRUE, \
 TRUE, \
};
#define NB_WAYPOINT 15
#define FP_BLOCKS { \
 "Wait GPS" , \
 "Geo init" , \
 "Holding point" , \
 "Start Engine" , \
 "Takeoff" , \
 "Standby" , \
 "StayGoal" , \
 "Circle" , \
 "Land here" , \
 "Land" , \
 "Flare" , \
 "Landed" , \
 "HOME" , \
}
#define NB_BLOCK 13
#define GROUND_ALT 0.
#define GROUND_ALT_CM 0
#define SECURITY_HEIGHT 0.4
#define SECURITY_ALT 0.4
#define HOME_MODE_HEIGHT 0.4
#define MAX_DIST_FROM_HOME 8.


#ifdef NAV_C


static inline void auto_nav_init(void) {
}

static inline bool InsideCyberZoo(float _x, float _y) {
  if (_y <= -0.1) {
    if (_y <= -1.4) {
      if (_y <= -5.9) {
        return FALSE;
      } else {
        float dy = _y - -1.4;
        return (-4.1+dy*-0.716007<= _x && _x <= 5.7+dy*1.472036);
      }
    } else {
      float dy = _y - -0.1;
      return (-5.0+dy*-0.716007<= _x && _x <= 4.7+dy*-0.725397);
    }
  } else {
    if (_y <= 4.9) {
      float dy = _y - 4.9;
      return (1.1+dy*1.243952<= _x && _x <= 1.1+dy*-0.725397);
    } else {
      return FALSE;
    }
  }
}
static inline bool InsideObstacleZone(float _x, float _y) {
  if (_y <= -0.1) {
    if (_y <= -1.3) {
      if (_y <= -4.7) {
        return FALSE;
      } else {
        float dy = _y - -1.3;
        return (-3.0+dy*-0.658009<= _x && _x <= 4.5+dy*1.497093);
      }
    } else {
      float dy = _y - -0.1;
      return (-3.7+dy*-0.658009<= _x && _x <= 3.7+dy*-0.630561);
    }
  } else {
    if (_y <= 3.9) {
      float dy = _y - 3.9;
      return (1.2+dy*1.235589<= _x && _x <= 1.2+dy*-0.630561);
    } else {
      return FALSE;
    }
  }
}

static inline void auto_nav(void) {
  if ((nav_block != 8) && ((((datalink_time>5)&&!((2>nav_block)))&&!((nav_block>=8)))&&(autopilot_in_flight()==true))) { GotoBlock(8); return; }
  if ((nav_block != 8) && (((!(InsideCyberZoo(GetPosX(),GetPosY()))&&!((2>nav_block)))&&!((nav_block>=8)))&&(autopilot_in_flight()==true))) { GotoBlock(8); return; }
  if ((nav_block != 8) && ((((GetPosAlt()>3.500000)&&!((2>nav_block)))&&!((nav_block>=8)))&&(autopilot_in_flight()==true))) { GotoBlock(8); return; }
  if ((nav_block != 11) && (((GetPosAlt()>4.500000)&&!((2>nav_block)))&&(autopilot_in_flight()==true))) { GotoBlock(11); return; }
  if ((nav_block != 8) && (((electrical.bat_low&&!((2>nav_block)))&&!((nav_block>=8)))&&(autopilot_in_flight()==true))) { GotoBlock(8); return; }
  if ((nav_block != 8) && (((electrical.bat_critical&&!((2>nav_block)))&&!((nav_block>=8)))&&(autopilot_in_flight()==true))) { GotoBlock(8); return; }
  switch (nav_block) {
    Block(0) // Wait GPS
    switch(nav_stage) {
      Stage(0)
        NavKillThrottle();
        NextStage();
      Label(while_1)
      Stage(1)
        if (! (!(GpsFixValid()))) Goto(endwhile_2) else NextStageAndBreak();
        Stage(2)
          Goto(while_1)
        Label(endwhile_2)
      /* Falls through. */
      default:
      Stage(3)
        NextBlock();
        break;
    }
    break;

    Block(1) // Geo init
    switch(nav_stage) {
      Label(while_3)
      Stage(0)
        if (! (LessThan(NavBlockTime(),2))) Goto(endwhile_4) else NextStageAndBreak();
        Stage(1)
          Goto(while_3)
        Label(endwhile_4)
      Stage(2)
        NavSetAltitudeReferenceHere();
        NextStage();
      /* Falls through. */
      default:
      Stage(3)
        NextBlock();
        break;
    }
    break;

    Block(2) // Holding point
    switch(nav_stage) {
      Stage(0)
        NavKillThrottle();
        NextStage();
      Stage(1)
        NavAttitude(RadOfDeg(0));
        NavVerticalAutoThrottleMode(RadOfDeg(0));
        NavVerticalThrottleMode(9600*(0));
        if (FALSE) {
          NextStageAndBreak()
        }
        break;
      /* Falls through. */
      default:
      Stage(2)
        NextBlock();
        break;
    }
    break;

    Block(3) // Start Engine
    switch(nav_stage) {
      Stage(0)
        NavResurrect();
        NextStage();
      Stage(1)
        NavAttitude(RadOfDeg(0));
        NavVerticalAutoThrottleMode(RadOfDeg(0));
        NavVerticalThrottleMode(9600*(0));
        if (FALSE) {
          NextStageAndBreak()
        }
        break;
      Stage(2)
        NavResurrect();
        NextStage();
      /* Falls through. */
      default:
      Stage(3)
        NextBlock();
        break;
    }
    break;

    Block(4) // Takeoff
    if ((nav_block != 5) && (GetPosAlt()>1.000000)) { GotoBlock(5); return; }
    switch(nav_stage) {
      Stage(0)
        NavSetWaypointHere(WP_CLIMB);
        NextStage();
      Stage(1)
        NavGotoWaypoint(2);
        NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
        NavVerticalClimbMode(nav_climb_vspeed);
        break;
      /* Falls through. */
      default:
      Stage(2)
        NextBlock();
        break;
    }
    break;

    Block(5) // Standby
    switch(nav_stage) {
      Stage(0)
        NavSetWaypointHere(WP_STDBY);
        NextStage();
      Stage(1)
        NavGotoWaypoint(3);
        NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
        NavVerticalAltitudeMode(WaypointAlt(3), 0.);
        break;
      /* Falls through. */
      default:
      Stage(2)
        NextBlock();
        break;
    }
    break;

    Block(6) // StayGoal
    switch(nav_stage) {
      Stage(0)
        NavGotoWaypoint(5);
        NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
        NavVerticalAltitudeMode(WaypointAlt(5), 0.);
        break;
      /* Falls through. */
      default:
      Stage(1)
        NextBlock();
        break;
    }
    break;

    Block(7) // Circle
    switch(nav_stage) {
      Stage(0)
        NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
        NavVerticalAltitudeMode(WaypointAlt(3), 0.);
        NavCircleWaypoint(3, 1);
        break;
      /* Falls through. */
      default:
      Stage(1)
        NextBlock();
        break;
    }
    break;

    Block(8) // Land here
    switch(nav_stage) {
      Stage(0)
        NavSetWaypointHere(WP_TD);
        NextStage();
      Stage(1)
        if (NavApproaching(4,CARROT)) {
          NextStageAndBreakFrom(4);
        } else {
          NavGotoWaypoint(4);
          NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
          NavVerticalAltitudeMode(WaypointAlt(4), 0.);
        }
        break;
      Stage(2)
        GotoBlock(10);
        break;
      /* Falls through. */
      default:
      Stage(3)
        NextBlock();
        break;
    }
    break;

    Block(9) // Land
    switch(nav_stage) {
      Stage(0)
        if (NavApproaching(4,CARROT)) {
          NextStageAndBreakFrom(4);
        } else {
          NavGotoWaypoint(4);
          NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
          NavVerticalAltitudeMode(WaypointAlt(4), 0.);
        }
        break;
      Stage(1)
        GotoBlock(10);
        break;
      /* Falls through. */
      default:
      Stage(2)
        NextBlock();
        break;
    }
    break;

    Block(10) // Flare
    if ((nav_block != 2) && NavDetectGround()) { GotoBlock(2); return; }
    if ((nav_block != 11) && !(nav_is_in_flight())) { GotoBlock(11); return; }
    if ((nav_block != 11) && (0.100000>GetPosAlt())) { GotoBlock(11); return; }
    switch(nav_stage) {
      Stage(0)
        NavStartDetectGround();
        NextStage();
      Stage(1)
        NavGotoWaypoint(4);
        NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
        NavVerticalClimbMode(nav_descend_vspeed);
        break;
      /* Falls through. */
      default:
      Stage(2)
        NextBlock();
        break;
    }
    break;

    Block(11) // Landed
    switch(nav_stage) {
      Stage(0)
        NavKillThrottle();
        NextStage();
      Stage(1)
        NavAttitude(RadOfDeg(0));
        NavVerticalAutoThrottleMode(RadOfDeg(0));
        NavVerticalThrottleMode(9600*(0));
        if (FALSE) {
          NextStageAndBreak()
        }
        break;
      /* Falls through. */
      default:
      Stage(2)
        NextBlock();
        break;
    }
    break;

    Block(12) // HOME
    switch(nav_stage) {
      Stage(0)
        nav_home();
        break;
      /* Falls through. */
      default:
      Stage(1)
        NextBlock();
        break;
    }
    break;

    default: break;
  }
}
#endif // NAV_C

#endif // FLIGHT_PLAN_H
